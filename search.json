                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            [{"title":"Labview循环与结构小计","date":"2019-07-29T02:39:13.000Z","url":"/2019/07/29/Labview循环与结构小计/","tags":["Labview","循环"],"categories":["Labview"],"content":"For循环是从0执行到N-1。若要同时执行多个for语句，可右键配置循环并并行。（指单个循环结构克隆出多个同时进行）注意，并行运行的循环必须独立于所有其他循环。前提：选择“工具”→“性能分析”→“查找可并行循环”。移位寄存器相当于添加一个变量用于各个循环间信息传递。并行循环将自动把移位寄存器变成错误寄存器。错误寄存器和移位寄存器的运行时的行为不同（？）。层叠移位寄存器（在移位寄存器上右键添加元素），用于访问以前多次循环的值。第一个即前一次循环，第二个即前两次循环，以此类推。（误差值处理？）关于循环中的自动索引默认情况下，将任一数组连接到For循环时都会启用自动索引，因为For循环的常见应用是处理单个数组元素。默认情况下，在接入或接出While循环时禁用自动索引，因此接线隧道将是实心的。（要右键节点手动打开）如果将一个数组通过自动索引的方式连接至For循环输入端，LabVIEW会把计数终端设置数组的大小，因此您无需连接计数终端。如果两个不同长度的数组通过自动索引的方式连接至For循环中，则长度较短的数组的元素个数决定循环的次数。示例：两个数组元素个数分别为4和8的数组被自动索引到For循环中，则循环执行次数将为4次。如果两个不同长度的数组通过自动索引的方式连接至While循环中，那么它们都将被索引，直到循环结束（由条件接线端决定），而且当数组没有数据后，在后续的每次迭代中，数组元素的数据类型的默认值将自动填充为数组的其余部分。 While循环具有独立于数组的停止条件，因此编写程序时需要注意在适当时停止While循环，从而避免将错误数据添加到输入和输出数组。开索引的时候输出的是一个数组，不开索引的话，输出的是最后那个数字。例子：输入一个数，输出自动索引打开时会记录每次循环的结果。            输入一个数组时，自动索引打开的情况下，每次循环都是会用输入数组的下一个数据，输出也存放在下一个数据中。            注：当总循环次数小于输入数组长度的话，输出数组大小为总循环次数N-1。反馈节点：反馈节点使用连线至初始化接线端的值作为第一次程序框图执行或循环的初始值。如初始化接线端未连线任何值，该VI使用数据类型的默认值。反馈节点可保存上一次执行或循环的结果。条件结构框没有自动索引和禁止索引。顺序结构作用：避免同时执行。平铺式顺序结构和层叠式顺序结构用途一致，顾名思义。事件结构中右键可以添加事件。公式节点：为了避免出现混乱的排版而出现的文本编辑实现程序逻辑的节点。注：变量大小写敏感。语法和C语言类似。属性节点：右键控件→创建右属性节点即可，用来实时改变程序中出现的控件属性。定时循环和定时顺序结构用来协调多个对时间要求严格的测量任务。循环定时优先级数字越大优先级越大。相同优先级数字下，定时顺序的第一帧的优先级高于定时循环的优先级。"},{"title":"Labview的一些小技巧（持续更新）","date":"2019-07-29T02:05:20.000Z","url":"/2019/07/29/Labview的一些小技巧（持续更新）/","tags":["Labview","变量","时间"],"categories":["Labview"],"content":"Labview操作记录集2019/7/29用工具面板里的手型工具，可以修改数值常量的值。按住ctrl再移动鼠标可扩大或缩小编程区域。变量和显示之间变量属性的转换要注意，保持良好的编程习惯。“整理程序框图”是个好东西，自动整理，思路更加清晰。Labview编程属于数据流编程，即所有输入端口上的数据都成为有效数据时，它才能被执行。变量创造法：局部变量：右键→创建 即可 或 程序框图中在“函数”选板的“结构”子选板中选择局部变量。全局变量：程序框图中在“函数”选板的“结构”子选板中选择全局变量。                    或者在labview的“新建”菜单中选择“全局变量”。（一个“全局”VI）                    （可以放很多控件，这样选择项中有很多选择）使用计算时间的程序中基准时间有时不为0，所以要两个计时器相减，其中一个作为基准时间。同步开始定时结构用于程序框图中各定时结构的起始时间同步。定时结构用于停止VI。"},{"title":"树构造算法","date":"2019-07-28T11:34:15.000Z","url":"/2019/07/28/树构造算法/","tags":["ID3","CART"],"categories":["机器学习"],"content":"写在前头在决策树算法这边碰到了点新东西，姑且记录下，以后会补充。以下信息都来自互联网，本人也本着学习的态度拼接下，方便阅读。（信息时代牛皮）树构造算法ID3算法ID3算法是一种贪心算法，用来构造决策树。ID3算法起源于概念学习系统（CLS），以信息熵（博主注：信息的复杂度）的下降速度为选取测试属性的标准，即在每个节点选取还尚未被用来划分的具有最高信息增益的属性作为划分标准（博主注：即“最明显的特征”来划分），然后继续这个过程，直到生成的决策树能完美分类训练样例。信息增益（information gain）： 在划分数据集前后信息发生的变化称为信息增益。所要用到的数据必须是离散化数据，例如原数据为（yes，yes，no）可记为（1 1 0）。这里可以了解下独热编码独热编码即 One-Hot 编码，又称一位有效编码，其方法是使用N位状态寄存器来对N个状态进行编码，每个状态都有它独立的寄存器位，并且在任意时候，其中只有一位有效。CART算法CART算法考虑到每个节点都有成为叶子节点的可能，对每个节点都分配类别。分配类别的方法可以用当前节点中出现最多的类别，也可以参考当前节点的分类错误或者其他更复杂的方法。CART算法仍然使用后剪枝。在树的生成过程中，多展开一层就会有多一些的信息被发现，CART算法运行到不能再长出分支为止，从而得到一棵最大的决策树。然后对这棵大树进行剪枝。"},{"title":"Labview字符串函数","date":"2019-07-26T13:49:36.000Z","url":"/2019/07/26/Labview字符串函数/","tags":["Labview"],"categories":["Labview"],"content":"简单聊聊那么开始吧注意，本博客操作基于Labview 2018版注意，本博客只会列举一些博主不太会的东西概念定点数：定点数是指计算机中采用的一种数的表示方法。参与运算的数的小数点位置固定不变。操作各类控件 右键→属性 中有很多可以更改的选项，比如“显示格式”一类的。修改显示格式无法修改进制时，是因为不能用DBL，要用整型才行。程序连线工具如下：数学-数值-缩放 下的VI可以用来AD转换。注意点字符串操作会在一些数据交流（下位机与上位机交流）时会用到，灵活使用相应模块即可。"},{"title":"关于本站","date":"2019-07-25T02:20:34.000Z","url":"/2019/07/25/关于本站/","tags":["note"],"categories":["杂"],"content":"本站基于hexo+github生成主要记录一些关于学习过程中出现的小问题现在还不太会用hexo，慢慢来吧"}]